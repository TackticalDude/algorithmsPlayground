<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="_coefficient_8cpp" kind="file" language="C++">
    <compoundname>Coefficient.cpp</compoundname>
    <includes refid="_coefficient_8h" local="yes">Coefficient.h</includes>
    <incdepgraph>
      <node id="16">
        <label>src/Coefficient.cpp</label>
        <link refid="Coefficient.cpp"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Coefficient.h</label>
        <link refid="_coefficient_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>math.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="7"><highlight class="preprocessor">#include<sp/>&quot;Coefficient.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">Coefficient::Coefficient()<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Auto-generated<sp/>constructor<sp/>stub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Coefficient::bassCoeffiecient(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intensity,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*b0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*b1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*b2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*a1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*a2)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frequency<sp/>=<sp/>330;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qFactor<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gain<sp/>=<sp/>intensity;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate<sp/>=<sp/>44100;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pi<sp/>=<sp/>4.0<sp/>*<sp/>atan(1);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>pow(10.0,<sp/>gain<sp/>/<sp/>40);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w0<sp/>=<sp/>2<sp/>*<sp/>pi<sp/>*<sp/>frequency<sp/>/<sp/>sampleRate;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>sin(w0)<sp/>/<sp/>(2.0<sp/>*<sp/>qFactor);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a0<sp/>=<sp/>(a<sp/>+<sp/>1)<sp/>+<sp/>(a<sp/>-<sp/>1)<sp/>*<sp/>cos(w0)<sp/>+<sp/>2.0<sp/>*<sp/>sqrt(a)<sp/>*<sp/>alpha;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>*a1<sp/>=<sp/>-(-2.0<sp/>*<sp/>((a<sp/>-<sp/>1)<sp/>+<sp/>(a<sp/>+<sp/>1)<sp/>*<sp/>cos(w0)))<sp/>/<sp/>a0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>*a2<sp/>=<sp/>-((a<sp/>+<sp/>1)<sp/>+<sp/>(a<sp/>-<sp/>1)<sp/>*<sp/>cos(w0)<sp/>-<sp/>2.0<sp/>*<sp/>sqrt(a)<sp/>*<sp/>alpha)<sp/>/<sp/>a0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>*b0<sp/>=<sp/>(a<sp/>*<sp/>((a<sp/>+<sp/>1)<sp/>-<sp/>(a<sp/>-<sp/>1)<sp/>*<sp/>cos(w0)<sp/>+<sp/>2.0<sp/>*<sp/>sqrt(a)<sp/>*<sp/>alpha))<sp/>/<sp/>a0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>*b1<sp/>=<sp/>(2<sp/>*<sp/>a<sp/>*<sp/>((a<sp/>-<sp/>1)<sp/>-<sp/>(a<sp/>+<sp/>1)<sp/>*<sp/>cos(w0)))<sp/>/<sp/>a0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>*b2<sp/>=<sp/>(a<sp/>*<sp/>((a<sp/>+<sp/>1)<sp/>-<sp/>(a<sp/>-<sp/>1)<sp/>*<sp/>cos(w0)<sp/>-<sp/>2.0<sp/>*<sp/>sqrt(a)<sp/>*<sp/>alpha))<sp/>/<sp/>a0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Coefficient::trebleCoefficient(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intensity,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*b0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*b1,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*b2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*a1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*a2)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frequency<sp/>=<sp/>3300;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qFactor<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gain<sp/>=<sp/>intensity;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampleRate<sp/>=<sp/>44100;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pi=4.0*atan(1);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a=pow(10.0,<sp/>gain/40);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w0=2*pi*frequency/sampleRate;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha=sin(w0)/(2.0*qFactor);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a0=(a+1)-(a-1)*cos(w0)+2.0*sqrt(a)*alpha;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>*a1=-(2.0*((a-1)-(a+1)*cos(w0)))/a0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>*a2=-((a+1)-(a-1)*cos(w0)-2.0*sqrt(a)*alpha)/a0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>*b0=(a*((a+1)+(a-1)*cos(w0)+2.0*sqrt(a)*alpha))/a0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>*b1=(-2.0*a*((a-1)+(a+1)*cos(w0)))/a0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>*b2=(a*((a+1)+(a-1)*cos(w0)-2.0*sqrt(a)*alpha))/a0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">Coefficient::~Coefficient()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Auto-generated<sp/>destructor<sp/>stub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/Coefficient.cpp"/>
  </compounddef>
</doxygen>
